#include<stdio.h>
#include<stdlib.h>
#include <locale.h>





void inicializandoVet(int *vetorA, int *vetorS){
    int i, j;
    //inicializando vetores com zero 
    for(i=0;i<17;i++){
        vetorA[i] =  0;
    }
    for(i=0;i<16;i++){
        vetorS[i] =  0;
    }   
}

void entradaValores(int *vetorE){
    setlocale(LC_ALL, "Portuguese");
    int i;
    //Entrada de valores
    printf("Digite 16 valores positivos entre 0 e 15  \n");
    for(i=0;i<16;i++){
        scanf("%i",&vetorE[i]);
        if(vetorE[i]<0 || vetorE[i]>15){
            printf("Digite um valor válido \n");
            i--;
        }
    }
}

void contagemVetAux(int *vetorA, int *vetorE){
    int i, j;
    //Fazendo a contagem de objetos do vetor auxiliar 
    for(i=0;i<16;i++){
        for(j=0;j<17;j++){
            if(vetorE[i] == j){
                vetorA[j] ++;
            }
        }
    }
}

void modifVetAux(int *vetorA, int *vetorE, int *vetorS){
    int i;
    //Modificando vetor auxiliar de forma que cada elemento em cada indice armazena a soma das contagens anteriores 
    for(i=1;i<17;i++){
        vetorA[i] = vetorA[i]+vetorA[i-1];
    }
}

void saidaVet(int *vetorA, int *vetorE, int *vetorS){
    int i, j;
    //Utilizando vetor auxiliar para gerar a saida ordenada do nosso vetor de entrada 
    for(i=0;i<16;i++){
        for(j=0;j<17;j++){
            if(vetorE[i] == j){
                vetorS[vetorA[j]] = vetorE[i];
                vetorA[j]--;
            }   
        }
    }
}

void imprimeSaida(int *vetorS){
    setlocale(LC_ALL, "Portuguese");
    int i;
    //imprimindo a saida
    printf("\n O resultado da ordenção de forma crescente é: \n"); 
    for(i=1 ;i <16; i++){
        printf("%i <= ",vetorS[i]);
    }
    /*printf("\n O resultado da ordenção de forma decrescente é: \n"); 
    for(i=16 ;i >1; i--){
        printf("%i >= ",vetorS[i]);
    }*/
}

int main(){
    //Pedindo pro usuario mostrar o tamanho do vetor de entrada e de
    int tam;
    printf("Digite o tamanho do vetor de entrada: \n");
    scanf("%i",tam);
    // declaração de vetores
    int *vetorAux[17],*entrada,*saida[16];
    entrada = calloc(tam, sizeof(int));
    
    inicializandoVet(vetorAux, saida);
    entradaValores(entrada);
    contagemVetAux(vetorAux, entrada);
    modifVetAux(vetorAux, entrada, saida);
    saidaVet(vetorAux, entrada, saida);
    imprimeSaida(saida);
    
return 0;
}
